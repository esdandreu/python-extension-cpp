name: Build release

on: 
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build_wheels:
    name: Python wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Clone vcpkg
        run: git submodule update --init --recursive ./vcpkg
        
      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@v10.1

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          # vcpkg does not support i686 nor aarch64
          CIBW_ARCHS_LINUX: "x86_64"
          # Skip musllinux builds
          CIBW_SKIP: "*-musllinux_*"
          # Pre install vcpkg (needed for macOS)
          CIBW_BEFORE_BUILD_MACOS: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh; ${{ github.workspace }}/vcpkg/vcpkg install
          CIBW_BEFORE_BUILD_WINDOWS: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.bat; ${{ github.workspace }}/vcpkg/vcpkg install

      - name: Upload python wheels
        uses: actions/upload-artifact@v2
        with:
          name: python-wheels
          path: ./wheelhouse/*.whl
  
  build_sdist:
    name: Build python sdist
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - run: python -m build --sdist

      - name: Upload python sdist
        uses: actions/upload-artifact@v2
        with:
          name: python-sdist
          path: ./dist/*

  # TODO build and distribute C++ library
    
  release:
    name: Make a Release
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download python wheels
        uses: actions/download-artifact@v3
        with:
          name: python-wheels
          path: ./wheelhouse/
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./wheelhouse/*
  
  pypi_publish:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download python wheels
        uses: actions/download-artifact@v3
        with:
          name: python-wheels
          path: ./dist/

      - name: Download python sdist
        uses: actions/download-artifact@v3
        with:
          name: python-sdist
          path: ./dist/

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          password: ${{ secrets.PYPI_TOKEN }}